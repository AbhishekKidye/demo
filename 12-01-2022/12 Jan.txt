Anagram
Java

C- bool is not supported any non zero value is true
	0 is false

C++ - bool is supported
	  but condition expression accepts 0,non zero values and true ,false alslo
	  
Java -condition expression should return boolean type of value

Solution 1:-

public classs checkAnagram{
	psv main(String [] args){
		String s1,s2;
		Scanner sc=new Scanner(System.in);
		s1=sc.nextLine();
		s2=sc.nextLine();
		StringBuffer str1= new StringBuffer(s1);
		StringBuffer str2= new StringBuffer(s2);
		
		if( isAnagram( str1,str2 ))
			System.out.println("Anagram");
			else
			System.out.println("Not Anagram");
			
	}
	
	public static boolean isAnagram( StringBuffer str1, StringBuffer str2)
	{
		char ch;
		int i,j;
		if ( str1.length()!=str2.length) )
			return false;
			
			for(i=0;i<str.length()-1; i++)
			{
				for](j=i+1;j<str1.lenght();j++)
				{
					if(str1.charAt(i)>str1.charAt(j))
					{
						ch=str1.charAt(i);
						str1.setCharAt(i,str1.charAt(j));
						str1.setCharAt(j,ch);
					}
					if(str2.charAt(i)>str2.charAt(j))
					{
						ch=str2.charAt(i);
						str2.setCharAt(i,str1.charAt(j));
						str2.setCharAt(j,ch);
					}
				}
				if(str1.charAt(i)!=str2.charAt(i));
				return false;
			}			
	}//end of func
	
}//end of class

_______________________________________________________________________________
Solution 3:
if(strlen(str1)!=strlen(str2)
return 0;

flag=0;
for(i=0;str1[i]!='\0';i++)
{
	for(j=0;str2[j]!='\0';j++)
	{
		if(str1[i]==str2[j])
		{
			flag=1;
			ch=str2[i];
			str2[i]=str2[j];
			str2[j]=ch;
			if(strcmp(str1,str2)==0)
			return 1;
		}	
	}
	if (flag==0)
	return 0;
}
